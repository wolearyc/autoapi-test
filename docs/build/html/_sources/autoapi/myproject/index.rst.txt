myproject
=========

.. py:module:: myproject

.. autoapi-nested-parse::

   Main file.



Classes
-------

.. autoapisummary::

   myproject.MyClass


Functions
---------

.. autoapisummary::

   myproject.function_a
   myproject.function_b
   myproject.function_b
   myproject.function_b


Package Contents
----------------

.. py:function:: function_a(x: numpy.typing.NDArray[numpy.float64])

   Do something.

   :param x: type hint doesn't link


.. py:function:: function_b(x: numpy.typing.NDArray)

   Do something.

   :param x: type hint doesn't link


.. py:function:: function_b(x: numpy.ndarray)

   Do something.

   :param x: type hint works as expected


.. py:function:: function_b(x: numpy.ndarray[Any, numpy.dtype[numpy.float64]])

   Do something.

   :param x: type hint works as expected


.. py:class:: MyClass

   Bases: :py:obj:`Sequence`\ [\ :py:obj:`numpy.typing.NDArray`\ [\ :py:obj:`numpy.float64`\ ]\ ]


   My class.

   The base class works nicely.


   .. py:method:: my_method(x: numpy.typing.NDArray[numpy.float64])

      Do something.

      :param x: type hint doesn't link!



   .. py:method:: another_method(x: Sequence[numpy.typing.NDArray[numpy.float64]])

      Do something.

      :param x: type hint doesn't link!



